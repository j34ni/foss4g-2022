Traceback (most recent call last):
  File "/usr/share/miniconda/envs/foss4g/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/usr/share/miniconda/envs/foss4g/lib/python3.10/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/share/miniconda/envs/foss4g/lib/python3.10/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/share/miniconda/envs/foss4g/lib/python3.10/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/share/miniconda/envs/foss4g/lib/python3.10/asyncio/base_events.py", line 646, in run_until_complete
    return future.result()
  File "/usr/share/miniconda/envs/foss4g/lib/python3.10/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/usr/share/miniconda/envs/foss4g/lib/python3.10/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/share/miniconda/envs/foss4g/lib/python3.10/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
LTS['min'][5].hvplot(geo=True, cmap="RdYlGn")
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
File [0;32m/usr/share/miniconda/envs/foss4g/lib/python3.10/site-packages/hvplot/util.py:233[0m, in [0;36mprocess_crs[0;34m(crs)[0m
[1;32m    232[0m [38;5;28;01mimport[39;00m [38;5;21;01mcartopy[39;00m[38;5;21;01m.[39;00m[38;5;21;01mcrs[39;00m [38;5;28;01mas[39;00m [38;5;21;01mccrs[39;00m
[0;32m--> 233[0m [38;5;28;01mimport[39;00m [38;5;21;01mgeoviews[39;00m [38;5;28;01mas[39;00m [38;5;21;01mgv[39;00m [38;5;66;03m# noqa[39;00m
[1;32m    234[0m [38;5;28;01mimport[39;00m [38;5;21;01mpyproj[39;00m

[0;31mModuleNotFoundError[0m: No module named 'geoviews'

During handling of the above exception, another exception occurred:

[0;31mImportError[0m                               Traceback (most recent call last)
Input [0;32mIn [23][0m, in [0;36m<cell line: 1>[0;34m()[0m
[0;32m----> 1[0m [43mLTS[49m[43m[[49m[38;5;124;43m'[39;49m[38;5;124;43mmin[39;49m[38;5;124;43m'[39;49m[43m][49m[43m[[49m[38;5;241;43m5[39;49m[43m][49m[38;5;241;43m.[39;49m[43mhvplot[49m[43m([49m[43mgeo[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m,[49m[43m [49m[43mcmap[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mRdYlGn[39;49m[38;5;124;43m"[39;49m[43m)[49m

File [0;32m/usr/share/miniconda/envs/foss4g/lib/python3.10/site-packages/hvplot/plotting/core.py:82[0m, in [0;36mhvPlotBase.__call__[0;34m(self, x, y, kind, **kwds)[0m
[1;32m     79[0m         plot [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_get_converter(x, y, kind, [38;5;241m*[39m[38;5;241m*[39mkwds)(kind, x, y)
[1;32m     80[0m         [38;5;28;01mreturn[39;00m pn[38;5;241m.[39mpanel(plot, [38;5;241m*[39m[38;5;241m*[39mpanel_dict)
[0;32m---> 82[0m [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_get_converter[49m[43m([49m[43mx[49m[43m,[49m[43m [49m[43my[49m[43m,[49m[43m [49m[43mkind[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwds[49m[43m)[49m(kind, x, y)

File [0;32m/usr/share/miniconda/envs/foss4g/lib/python3.10/site-packages/hvplot/plotting/core.py:89[0m, in [0;36mhvPlotBase._get_converter[0;34m(self, x, y, kind, **kwds)[0m
[1;32m     87[0m y [38;5;241m=[39m y [38;5;129;01mor[39;00m params[38;5;241m.[39mpop([38;5;124m'[39m[38;5;124my[39m[38;5;124m'[39m, [38;5;28;01mNone[39;00m)
[1;32m     88[0m kind [38;5;241m=[39m kind [38;5;129;01mor[39;00m params[38;5;241m.[39mpop([38;5;124m'[39m[38;5;124mkind[39m[38;5;124m'[39m, [38;5;28;01mNone[39;00m)
[0;32m---> 89[0m [38;5;28;01mreturn[39;00m [43mHoloViewsConverter[49m[43m([49m
[1;32m     90[0m [43m    [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_data[49m[43m,[49m[43m [49m[43mx[49m[43m,[49m[43m [49m[43my[49m[43m,[49m[43m [49m[43mkind[49m[38;5;241;43m=[39;49m[43mkind[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mparams[49m
[1;32m     91[0m [43m[49m[43m)[49m

File [0;32m/usr/share/miniconda/envs/foss4g/lib/python3.10/site-packages/hvplot/converter.py:388[0m, in [0;36mHoloViewsConverter.__init__[0;34m(self, data, x, y, kind, by, use_index, group_label, value_label, backlog, persist, use_dask, crs, fields, groupby, dynamic, grid, legend, rot, title, xlim, ylim, clim, symmetric, logx, logy, loglog, hover, subplots, label, invert, stacked, colorbar, datashade, rasterize, row, col, debug, framewise, aggregator, projection, global_extent, geo, precompute, flip_xaxis, flip_yaxis, dynspread, hover_cols, x_sampling, y_sampling, project, tools, attr_labels, coastline, tiles, sort_date, check_symmetric_max, transforms, stream, cnorm, features, rescale_discrete_levels, **kwds)[0m
[1;32m    386[0m [38;5;28mself[39m[38;5;241m.[39mdynamic [38;5;241m=[39m dynamic
[1;32m    387[0m [38;5;28mself[39m[38;5;241m.[39mgeo [38;5;241m=[39m [38;5;28many[39m([geo, crs, global_extent, projection, project, coastline, features])
[0;32m--> 388[0m [38;5;28mself[39m[38;5;241m.[39mcrs [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_process_crs[49m[43m([49m[43mdata[49m[43m,[49m[43m [49m[43mcrs[49m[43m)[49m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39mgeo [38;5;28;01melse[39;00m [38;5;28;01mNone[39;00m
[1;32m    389[0m [38;5;28mself[39m[38;5;241m.[39mproject [38;5;241m=[39m project
[1;32m    390[0m [38;5;28mself[39m[38;5;241m.[39mcoastline [38;5;241m=[39m coastline

File [0;32m/usr/share/miniconda/envs/foss4g/lib/python3.10/site-packages/hvplot/converter.py:630[0m, in [0;36mHoloViewsConverter._process_crs[0;34m(self, data, crs)[0m
[1;32m    628[0m _crs [38;5;241m=[39m [38;5;28mgetattr[39m(data, [38;5;124m'[39m[38;5;124mattrs[39m[38;5;124m'[39m, {})[38;5;241m.[39mget(crs [38;5;129;01mor[39;00m [38;5;124m'[39m[38;5;124mcrs[39m[38;5;124m'[39m, crs)
[1;32m    629[0m [38;5;28;01mtry[39;00m:
[0;32m--> 630[0m     [38;5;28;01mreturn[39;00m [43mprocess_crs[49m[43m([49m[43m_crs[49m[43m)[49m
[1;32m    631[0m [38;5;28;01mexcept[39;00m [38;5;167;01mValueError[39;00m:
[1;32m    632[0m     [38;5;66;03m# only raise error if crs was specified in kwargs[39;00m
[1;32m    633[0m     [38;5;28;01mif[39;00m crs:

File [0;32m/usr/share/miniconda/envs/foss4g/lib/python3.10/site-packages/hvplot/util.py:236[0m, in [0;36mprocess_crs[0;34m(crs)[0m
[1;32m    234[0m     [38;5;28;01mimport[39;00m [38;5;21;01mpyproj[39;00m
[1;32m    235[0m [38;5;28;01mexcept[39;00m [38;5;167;01mImportError[39;00m:
[0;32m--> 236[0m     [38;5;28;01mraise[39;00m [38;5;167;01mImportError[39;00m([38;5;124m'[39m[38;5;124mGeographic projection support requires GeoViews and cartopy.[39m[38;5;124m'[39m)
[1;32m    238[0m [38;5;28;01mif[39;00m crs [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[1;32m    239[0m     [38;5;28;01mreturn[39;00m ccrs[38;5;241m.[39mPlateCarree()

[0;31mImportError[0m: Geographic projection support requires GeoViews and cartopy.
ImportError: Geographic projection support requires GeoViews and cartopy.

